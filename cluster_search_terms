#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import collections
import pandas as pd

from sklearn.cluster import KMeans
from sklearn.feature_extraction.text import TfidfVectorizer

parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('nclusters', type=int, help='the number of clusters')
parser.add_argument('terms', type=argparse.FileType('r'), help='CSV of terms')

args = parser.parse_args()

df = pd.read_csv(args.terms, encoding='utf-8')
terms = df['Term'].values.astype('U')

tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(terms)

kmeans = KMeans(n_clusters=args.nclusters)
kmeans.fit(tfidf_matrix)

clusters = collections.defaultdict(list)

for i, label in enumerate(kmeans.labels_):
    clusters[label].append(i)

clusters = dict(clusters)

for cluster in range(args.nclusters):
    print('Cluster %i:' % cluster)

    for i, sentence in enumerate(clusters[cluster]):
        print('\t%i: %s' % (i, terms[sentence]))
